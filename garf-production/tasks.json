[
    {
        "id":  "TASK-1",
        "type":  "requirement",
        "spec":  "age-bands.spec",
        "title":  "Implement: **Band Definition**: Age ranges with maximum sprea",
        "description":  "**Band Definition**: Age ranges with maximum spread limits:",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-2",
        "type":  "requirement",
        "spec":  "age-bands.spec",
        "title":  "Implement: **Compatibility Rules**:",
        "description":  "**Compatibility Rules**:",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-3",
        "type":  "requirement",
        "spec":  "age-bands.spec",
        "title":  "Implement: **Group Validation**: `groupAgeOk()` validates ent",
        "description":  "**Group Validation**: `groupAgeOk()` validates entire group age distribution.",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-4",
        "type":  "requirement",
        "spec":  "age-bands.spec",
        "title":  "Implement: **Scoring Impact**: Age penalties affect group sco",
        "description":  "**Scoring Impact**: Age penalties affect group score:",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-5",
        "type":  "requirement",
        "spec":  "age-bands.spec",
        "title":  "Implement: **UI Display**: Show age distribution in group det",
        "description":  "**UI Display**: Show age distribution in group details.",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-6",
        "type":  "requirement",
        "spec":  "allergy-management.spec",
        "title":  "Implement: **Allergy Tracking**:",
        "description":  "**Allergy Tracking**:",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-7",
        "type":  "requirement",
        "spec":  "allergy-management.spec",
        "title":  "Implement: **Hard Limit**: Maximum 3 distinct severe allergie",
        "description":  "**Hard Limit**: Maximum 3 distinct severe allergies per group",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-8",
        "type":  "requirement",
        "spec":  "allergy-management.spec",
        "title":  "Implement: **Scoring Penalties**:",
        "description":  "**Scoring Penalties**:",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-9",
        "type":  "requirement",
        "spec":  "allergy-management.spec",
        "title":  "Implement: **Unassigned Reason**: Participants marked with `\"",
        "description":  "**Unassigned Reason**: Participants marked with `\"allergy-limit-exceeded\"` if cannot be placed",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-10",
        "type":  "requirement",
        "spec":  "allergy-management.spec",
        "title":  "Implement: **Diagnostics**:",
        "description":  "**Diagnostics**:",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-11",
        "type":  "requirement",
        "spec":  "grouping-algorithm.spec",
        "title":  "Implement: **Hard Constraints**: Enforce kosher-only, age ban",
        "description":  "**Hard Constraints**: Enforce kosher-only, age bands, diet compatibility, and allergy limits",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-12",
        "type":  "requirement",
        "spec":  "grouping-algorithm.spec",
        "title":  "Implement: **Scoring System**: Calculate group quality scores",
        "description":  "**Scoring System**: Calculate group quality scores with penalties and bonuses",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-13",
        "type":  "requirement",
        "spec":  "grouping-algorithm.spec",
        "title":  "Implement: **Two-Phase Builder**: Open expansion phase follow",
        "description":  "**Two-Phase Builder**: Open expansion phase followed by finalization phase",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-14",
        "type":  "requirement",
        "spec":  "grouping-algorithm.spec",
        "title":  "Implement: **Policy Integration**: Support configurable group",
        "description":  "**Policy Integration**: Support configurable grouping policies via Supabase",
        "priority":  "medium",
        "estimation":  8,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-15",
        "type":  "requirement",
        "spec":  "grouping-algorithm.spec",
        "title":  "Implement: **UUID Mapping**: Handle numeric indices in engine",
        "description":  "**UUID Mapping**: Handle numeric indices in engine with UUID persistence",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-16",
        "type":  "requirement",
        "spec":  "grouping-algorithm.spec",
        "title":  "Implement: **Diagnostics**: Provide comprehensive run statist",
        "description":  "**Diagnostics**: Provide comprehensive run statistics and group analysis",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-17",
        "type":  "requirement",
        "spec":  "grouping-algorithm.spec",
        "title":  "Implement: **Unassigned Tracking**: Track participants who co",
        "description":  "**Unassigned Tracking**: Track participants who couldn\u0027t be placed with reasons",
        "priority":  "low",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-18",
        "type":  "requirement",
        "spec":  "grouping-algorithm.spec",
        "title":  "Implement: **Test Coverage**: Verify all rules and constraint",
        "description":  "**Test Coverage**: Verify all rules and constraints through comprehensive testing",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-19",
        "type":  "requirement",
        "spec":  "grouping-run.spec",
        "title":  "Implement: **Trigger**: A \"Run Grouping\" action in Lovable th",
        "description":  "**Trigger**: A \"Run Grouping\" action in Lovable that calls `POST /build-groups`.",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-20",
        "type":  "requirement",
        "spec":  "grouping-run.spec",
        "title":  "Implement: **Engine**: Uses `runGrouping(participants, option",
        "description":  "**Engine**: Uses `runGrouping(participants, options)` from `groupingEngineEnhanced.ts`.",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-21",
        "type":  "requirement",
        "spec":  "grouping-run.spec",
        "title":  "Implement: **Persistence**: Saves results in Supabase (`runs`",
        "description":  "**Persistence**: Saves results in Supabase (`runs`, `groups`, `group_members`, `unassigned_queue`).",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-22",
        "type":  "requirement",
        "spec":  "grouping-run.spec",
        "title":  "Implement: **UI**: Lovable auto-dashboards show runs history,",
        "description":  "**UI**: Lovable auto-dashboards show runs history, groups, and unassigned queue.",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-23",
        "type":  "requirement",
        "spec":  "grouping-run.spec",
        "title":  "Implement: **Security**: Ensure only authenticated admins can",
        "description":  "**Security**: Ensure only authenticated admins can trigger runs.",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-24",
        "type":  "requirement",
        "spec":  "grouping-run.spec",
        "title":  "Implement: **Policy Integration**: Every run must be associat",
        "description":  "**Policy Integration**: Every run must be associated with a grouping policy.",
        "priority":  "high",
        "estimation":  8,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-25",
        "type":  "requirement",
        "spec":  "kosher-filter.spec",
        "title":  "Implement: **Filter Logic**: When `kosherOnly: true`, filter ",
        "description":  "**Filter Logic**: When `kosherOnly: true`, filter participants where `kosher === true` or response indicates flexibility.",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-26",
        "type":  "requirement",
        "spec":  "kosher-filter.spec",
        "title":  "Implement: **Unassigned Tracking**: Non-kosher participants m",
        "description":  "**Unassigned Tracking**: Non-kosher participants marked as unassigned with reason `\"non-kosher-in-kosher-only-run\"`.",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-27",
        "type":  "requirement",
        "spec":  "kosher-filter.spec",
        "title":  "Implement: **UI Toggle**: Lovable form includes a clear \"Kosh",
        "description":  "**UI Toggle**: Lovable form includes a clear \"Kosher Only\" checkbox.",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-28",
        "type":  "requirement",
        "spec":  "kosher-filter.spec",
        "title":  "Implement: **Reporting**: Show count of filtered participants",
        "description":  "**Reporting**: Show count of filtered participants in diagnostics.",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-29",
        "type":  "requirement",
        "spec":  "kosher-filter.spec",
        "title":  "Implement: **Flexibility Detection**: Recognize \"×œ× ×ž×©× ×",
        "description":  "**Flexibility Detection**: Recognize \"×œ× ×ž×©× ×”\", \"flexible\", \"doesn\u0027t matter\" as kosher-compatible.",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-30",
        "type":  "requirement",
        "spec":  "scoring-system.spec",
        "title":  "Implement: **Base Score**: Start at 1.0 for all groups",
        "description":  "**Base Score**: Start at 1.0 for all groups",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-31",
        "type":  "requirement",
        "spec":  "scoring-system.spec",
        "title":  "Implement: **Penalties** (subtract from score):",
        "description":  "**Penalties** (subtract from score):",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-32",
        "type":  "requirement",
        "spec":  "scoring-system.spec",
        "title":  "Implement: **Bonuses** (add to score):",
        "description":  "**Bonuses** (add to score):",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-33",
        "type":  "requirement",
        "spec":  "scoring-system.spec",
        "title":  "Implement: **Score Range**: Clamped between [0, 1]",
        "description":  "**Score Range**: Clamped between [0, 1]",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-34",
        "type":  "requirement",
        "spec":  "scoring-system.spec",
        "title":  "Implement: **Quick Score**: Fast calculation for optimization",
        "description":  "**Quick Score**: Fast calculation for optimization loops",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-35",
        "type":  "requirement",
        "spec":  "two-phase-builder.spec",
        "title":  "Implement: **Open Phase**:",
        "description":  "**Open Phase**:",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-36",
        "type":  "requirement",
        "spec":  "two-phase-builder.spec",
        "title":  "Implement: **Finalize Phase**:",
        "description":  "**Finalize Phase**:",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-37",
        "type":  "requirement",
        "spec":  "two-phase-builder.spec",
        "title":  "Implement: **Seed Selection Strategies**:",
        "description":  "**Seed Selection Strategies**:",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-38",
        "type":  "requirement",
        "spec":  "two-phase-builder.spec",
        "title":  "Implement: **Optimization Levels**:",
        "description":  "**Optimization Levels**:",
        "priority":  "medium",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    },
    {
        "id":  "TASK-39",
        "type":  "requirement",
        "spec":  "two-phase-builder.spec",
        "title":  "Implement: **Group Validation**: Must pass all constraints be",
        "description":  "**Group Validation**: Must pass all constraints before locking",
        "priority":  "high",
        "estimation":  3,
        "status":  "todo",
        "createdAt":  "2025-09-18"
    }
]
